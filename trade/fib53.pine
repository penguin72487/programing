//@version=4
strategy("Optimized Fibonacci Retracement Strategy with Dynamic Leverage and Trend", shorttitle="OFRSDLT", overlay=true)

// 策略参数
lookback = input(100, minval=1, title="Lookback Period")
riskRewardRatio = input(2.0, title="Risk/Reward Ratio")
atrMultiplier = input(1.5, title="ATR Multiplier for Stop Loss")
leverage = input(10, title="Max Leverage")
emaFastLength = input(12, title="Fast EMA Length")
emaSlowLength = input(26, title="Slow EMA Length")

// 获取过去lookback周期内的最高和最低价
highestPrice = highest(high, lookback)
lowestPrice = lowest(low, lookback)
atr = atr(14)

// 计算Fibonacci回撤水平
fibLevels = array.new_float()
array.push(fibLevels, 0.236)
array.push(fibLevels, 0.382)
array.push(fibLevels, 0.5)
array.push(fibLevels, 0.618)
array.push(fibLevels, 0.786)

// 计算入场和出场水平
entryLevelIndex = 2 // 0.5 Fibonacci Level for entry
takeProfitLevelIndex = 4 // 0.786 Fibonacci Level for take profit

entryPrice = lowestPrice + (highestPrice - lowestPrice) * array.get(fibLevels, entryLevelIndex)
takeProfitPrice = lowestPrice + (highestPrice - lowestPrice) * array.get(fibLevels, takeProfitLevelIndex)
stopLossPrice = close - atr * atrMultiplier

// 计算EMA趋势
emaFast = ema(close, emaFastLength)
emaSlow = ema(close, emaSlowLength)
trendUp = emaFast > emaSlow
trendDown = emaFast < emaSlow

// 定义买入和卖出条件
longCondition = crossover(close, entryPrice) and trendUp
shortCondition = crossunder(close, entryPrice) and trendDown

// 执行交易
if (longCondition)
    strategy.entry("Long", strategy.long)
    strategy.exit("Take Profit", "Long", limit=takeProfitPrice)
    strategy.exit("Stop Loss", "Long", stop=stopLossPrice)

if (shortCondition)
    strategy.entry("Short", strategy.short)
    strategy.exit("Take Profit", "Short", limit=entryPrice - (entryPrice - stopLossPrice) * riskRewardRatio)
    strategy.exit("Stop Loss", "Short", stop=stopLossPrice)

// 画出入场和出场水平
plot(entryPrice, color=color.blue, title="Entry Level")
plot(takeProfitPrice, color=color.green, title="Take Profit Level")
plot(stopLossPrice, color=color.red, title="Stop Loss Level")

// 标记最高和最低价
plotshape(series=high == highestPrice, location=location.abovebar, color=color.green, style=shape.triangleup, text="High")
plotshape(series=low == lowestPrice, location=location.belowbar, color=color.red, style=shape.triangledown, text="Low")