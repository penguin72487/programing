//@version=4
strategy("Optimized Long Term Fibonacci Strategy with Leverage", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=5)

// 策略参数
fibStartLength = input(100, minval=1, title="Fibonacci Lookback Period Start") // 縮短回看期
fibEndLength = input(30, minval=1, title="Fibonacci Lookback Period End") // 縮短回看期
volMultiplier = input(1.5, title="Volume Multiplier for Entry") // 降低交易量倍數
riskPct = input(1, title="Risk Percentage for Stop Loss")
atrLength = input(10, title="ATR Length for Stop Loss") // 縮短ATR計算期
leverage = input(3, title="Leverage") // 降低槓桿

// 趋势过滤器
longTrendFilter = sma(close, 200) < close
shortTrendFilter = sma(close, 200) > close

// 计算ATR和风险管理
atr = atr(atrLength)
riskPerTrade = strategy.equity * (riskPct / 100) * leverage

// 计算Fibonacci通道的高点和低点
highLevel = highest(high, fibStartLength)
lowLevel = lowest(low, fibEndLength)

// 计算Fibonacci回撤水平
fibRange = highLevel - lowLevel
fib618 = highLevel - fibRange * 0.618
fib382 = highLevel - fibRange * 0.382
fib236 = highLevel - fibRange * 0.236

// 绘制Fibonacci通道
plot(highLevel, color=color.red, linewidth=2, title="High Level")
plot(fib618, color=color.blue, linewidth=2, title="Fib 0.618 Level")
plot(fib382, color=color.orange, linewidth=2, title="Fib 0.382 Level")
plot(fib236, color=color.green, linewidth=2, title="Fib 0.236 Level")
plot(lowLevel, color=color.red, linewidth=2, title="Low Level")

// 计算平均交易量
avgVol = sma(volume, fibStartLength)

// 交易信号逻辑
longCondition = crossover(close, fib236) and volume > avgVol * volMultiplier and longTrendFilter
shortCondition = crossunder(close, fib618) and volume > avgVol * volMultiplier and shortTrendFilter

// 进场策略
if (longCondition)
    strategy.entry("Long", strategy.long, qty=riskPerTrade / atr)

if (shortCondition)
    strategy.entry("Short", strategy.short, qty=riskPerTrade / atr)

// 动态止损设置
longStopLoss = close - atr * 2
shortStopLoss = close + atr * 2
longTakeProfit = close + atr * 4
shortTakeProfit = close - atr * 4

strategy.exit("Stop Loss", "Long", stop=longStopLoss)
strategy.exit("Take Profit", "Long", limit=longTakeProfit)
strategy.exit("Stop Loss", "Short", stop=shortStopLoss)
strategy.exit("Take Profit", "Short", limit=shortTakeProfit)

// 退出条件
strategy.close("Long", when=crossunder(close, fib382) or (strategy.openprofit > atr * 6)) // 加入盈利目標退出條件
strategy.close("Short", when=crossover(close, fib382) or (strategy.openprofit > atr * 6)) // 加